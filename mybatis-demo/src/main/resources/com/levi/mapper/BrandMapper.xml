<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：名称空间  -->
<mapper namespace="com.levi.mapper.BrandMapper">
    <!--
      当数据库表中的属性名和类中的属性名不匹配时（包括驼峰与下划线不匹配），mybatis不会进行自动封装
      解决方案：
      1. 在sql中为不匹配的属性起别名，让别名和实体中属性名相同即可，缺点是每次查询都要定义别名,解决方案是定义sql片段；
      2. resultMap
      -->
    <!--  sql片段  -->
    <sql id="brandColumn">id,brand_name brandName, company_name companyName, ordered, description, status</sql>

    <!--  resultMap  -->
    <resultMap id="brandResultMap" type="com.levi.pojo.Brand">
    <!--   主键字段映射     -->
<!--        <id></id>-->
        <result column="brand_name" property="brandName" />
        <result column="company_name" property="companyName" />
    </resultMap>

    <!--  不使用resultMap   -->
<!--    <select id="selectAllBrands" resultType="com.levi.pojo.Brand">-->
<!--        select * from tb_brand;-->
<!--        select id,brand_name brandName, company_name companyName, ordered, description, status from tb_brand;-->
<!--        select-->
<!--            <include refid="brandColumn"></include>-->
<!--        from tb_brand;-->
<!--    </select>-->


    <!--  使用resultMap  -->
    <select id="selectAllBrands" resultMap="brandResultMap">
        <!--        select * from tb_brand;-->
        <!--        select id,brand_name brandName, company_name companyName, ordered, description, status from tb_brand;-->
        <!--        select-->
        <!--            <include refid="brandColumn"></include>-->
        <!--        from tb_brand;-->
        select * from tb_brand;
    </select>
</mapper>